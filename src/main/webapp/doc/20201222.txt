2020.12.22. (1st)
1. 개발환경 구축하기, 2. 웹 아키텍쳐
 이 부분은 이론이니까 후루룩 하고 넘어가고

*** 3. jsp/servlet, spring, spring boot(별도) 쪽을 오래할거야

4. 배치 - 이건 이틀정도

-----정리페이지 복습

스프링다운로드
https://spring.io/tools


→ test는 구성은 하지만 나중에 배포할땐 포함 안함

여기서 archetype이란? 메이븐 프로젝트 tookit입니다. 메이븐 프로젝트에서 사용할 수 있는 모델이나 패턴을 템플릿화하여 사용자들이 쉽고 빠르게 구현할 수 있도록 제공해주는 역할을 합니다.






HTML : Hyper Text Markup Language

http : 80
https : 443

Web Application Server : WAS (jboss, IBM 웹스피어)
			     Servlet Container + EJB Container
	
* EJB(Enterprise Java Beans)
* Jboss
Jboss란 Red Hat의 자회사인 Jboss가 개발한 Jboss Application Server로 IBM Websphere 및 SAP NetWeaver와 같은 솔루션을 대체하는 오픈 소스 역할을 한다. 주로 Sun Microsystems의 Enterprise JavaBeans(EJB) API를 사용하여 기능을 제공한다. 
- EJB container와 그 스택의 다른 모든기능을 포함한 Java EE Application Server이다.
- Java EE 서버는 수백 메가 메모리를 가짐.

Servlet Container[Web Container] (tomcat)

* Tomcat
Tomcat이란 흔히 "Apache Tomcat"이라고 불리는 Tomcat은 기술적으로는 응용 프로그램 서버가 아니다. 오히려 Tomcat은 Web server와 Web container에 가깝다. 그렇다고해서 기능이 부족한것은 아니다. Java Servlet, JavaServer Pages, Java Expression Language 및 Java WebSocket Technologies의 오픈 소스 구현으로, 대규모 mission-critical web application 프로그램을 구동하기 위한 플랫폼으로 사용된다.

- http 서버 및 Java servlet container일 뿐이다. 
- 가벼운 메모리 (약 60-70MB)를 가짐
- 단순한 웹 응용 프로그램이나 전체 Java EE 서버가 필요없는 Spring과 같은 프레임 워크를 사용하는 응용 프로그램에 널리 사용된다. 


Jboss와 Tomcat의 차이점.

Jboss와 Tomcat은 모두 Java Servlet Application 서버지만 Jboss는 훨씬 더 기능이 많다. 이 둘의 가장 큰 차이점은 Jboss가 EJB 및 엔터프라이즈 Java 응용 프로그램에서 작업하는 개발자에게 유용한 기타 기술을 포함하여 완전한 Java Enterprise Edition(JEE) 스택을 제공한다는 것이다. Tomcat은 훨신 더 제한적이다. Jboss가 Servlet Container와 Web server를 포함하는 JEE 스택인 반면 Tomcat은 대부분 Servlet Container와 Web Server이다.









Maven Project 
Group ID : 해당 프로젝트를 진행하는 회사에 대한 정보
	   일반적으로 회사의 도메인 역순으로 기술(법적으로 정해진게 아니고)
	    naver.com ==> com.naver
	    google.com ==> com.googld
	    ddit.or.kr ==> kr.or.ddit

Artifact(인공물) ID : Group ID에 해당하는 회사에서 진행하는 프로젝트명
		ex) google : GMAIL, Google Drive

Version : 프로젝트의 버전
	주로 대, 중, 소 3.5.2

jar(Java ARchive) :　클래스들을 묶어 놓은 파일, 압축파일
- jar는 항아리이고, 자바 아카이브는 자바 보관소.

war(Web ARchive) : 웹 프로그램을 묶어 놓은 파일.
			tomcat의 WebApps 폴더에 war파일을 복사해놓고 
			톰캣을 기동하면 war파일을 톰캣이 자동으로 압축을 해제하여 웹 어플리케이션이 서비스 되도록 한다.
			이걸 바로 배포라 한다!	




→ 우리가 원래 쓰던거에 맞춰서 3.0이랑 1.8로 바꿈







수업PPT

▶ 웹 기반 어플리케이션 – 서버 프로그램 구현하기
	- 웹 프로그래밍에 필요한 구성 요소를 이해한다.
	- Servlet/JSP의 동작 원리를 이해한다.
	- Servlet/JSP를 이용한 JDBC 프로그램을 작성할 수 있다.
	- 서버 프로그램 구현 기술 
		-> 웹 프로그래밍 시작
			· 웹 어플리케이션과 웹 프로그래밍
			· URL과 웹 어플리케이션 주소
			· 자바와 웹 프로그래밍

▶ 웹 기반 어플리케이션 – 웹 프로그래밍의 시작
	- 웹 어플리케이션 서버 방식을 이해한다.
	- URL을 통한 요청 과정을 이해한다.
▶ 서버 프로그램 구현하기 – Web 시스템 직군, Web이란
	- World Wide Web(WWW) : 인터넷에 연결된 컴퓨터들을 통해 사람들이 정보를 공유할 수 있는 정보 공간
	- HTTP 프로토콜, 하이퍼텍스트, HTML형식 등을 사용하여 그림과 문자를 교환하는	전송방식
	- URL을 통해 요청
	- 초기 웹은 정적인 공간, 문서 공유를 위한 목적으로 탄생(웹페이지)
	- 동적으로 컨텐츠를 생성할 수 있는 Web프로그래밍(웹어플리케이션) 환경 등장		
	(applet, jsp, asp, 웹 어플리케이션)

	웹페이지 -> 웹 어플리케이션

▶ 서버 프로그램 구현하기 – 웹 어플리케이션(구성요소)
	- Web Server : client의 요청을 받아서 결과를 전송
			(정적 자원처리에 최적화 – html, css, img)
	- Web Application Server : 로직에 의해 동적 컨텐츠를 생성하여 Web Server에
				   전달
	- 데이터베이스 : 웹 어플리케이션에서 관리하고자 하는 데이터를 저장
			(인사정보, 게시글정보)
	- 웹 브라우저 : 웹 서버의 처리 결과를 사용자에게 표시(IE, Chrome, Firefox)

▶ 서버 프로그램 구현하기 – 웹 어플리케이션 서버 방식(CGI – Common Gateway Interface)
	- Web Server와 프로그램 사이에 정보를 주고받는 규칙
	- Perl, C/C++로 웹 서버가 실행할 수 있는 프로그램
	- 요청에 대해 웹서버가 CGI프로그램을 호출 -> 요청 증가시 부담, 동시처리 개수 제한
	- 사전에 컴파일 된 프로그램으로 서비스

▶ 서버 프로그램 구현하기 – 웹 어플리케이션 서버 방식(WAS)
	- 요청을 받은 Web Server는 동적 페이지 처리를 Web Application Server에게 위임
	- WAS는 처리된 내역을 Web Server로 전송, 최종적으로 Web Server가 Client에게
	결과 전달
	- Servlet/JSP는 thread방식으로 실행 -> 동시처리 성능이 우수
	- Servlet/JSP는 main함수를 통해 실행하지 않는다.


▶ 서버 프로그램 구현하기 – 자바와 웹 프로그래밍
	- Servlet : 자바의 웹 개발 표준 스펙, 스펙에 따라 만들어진 소스, 멀티 쓰레드로 실행
	- JSP : 실행 코드 방식인 (java)Servlet의 스크립트 방식의 표준 스펙
		jsp는 실행시 servlet으로 변환되어 실행
	     (java파일은 class파일로 바뀌는게 jsp파일은 java파일로 바뀌고 class파일로 바뀜)
	- Web Container : 표준 규약에 따라 구현된 웹 어플리케이션을 관리하고 실행할 수 	있는 소프트웨어(tomcat, resin, jboss등)

	Servlet vs JSP 
	- Servlet :  자바 코드안에 html
	- JSP : html문서 안에 자바코드

● 웹의 탄생 배경
● URL을 통한 웹서버에 요청/응답과정
● 자바기반의 웹 프로그래밍 개요(Servlet / JSP)



2
▶ 웹 기반 어플리케이션 – 서블릿 프로그래밍 – 서블릿 기초
	Servlet
	- Server program + let(작다를 뜻하는 접미어) : 작은 서버 프로그램
	- J2EE의 표준 스펙중 하나
		· Servlet, JSP, EJB, Java mail...
	- A Servlet is a Java technology-based Web componet, managed by a 		container, that generates dynamic content.  	
		· JAVA를 사용하여 동적 웹페이지를 생성하는 표준 스펙
		· HttpServlet 클래스를 상속하여 작성
	
	Servlet-container
	- The servlet container is a part of a Web server or application server that 	provides the network services over which requests and reponses are sent, 
	decodes MIME-based requests, and formats MIME-based responses.
		· Web Server(Servlet container + EJB Container)
		· 서블릿을 관리 실행할 수 있는 프로그램(서버)
		· 요청(request)과 응답(response)을 통한 네트워크 서비스
	- A servlet container also contains and manages servlets through their 		lifecycle.
	
	MIME
	- Multipurpose Internet Mail Extensions
	- 전자우편을 위한 인터넷 표준 포맷
	- 다목적 인터넷 메일 확장(->인터넷 메일 교환을 위한 멀티미디어 문서 타입의 정의)
		· 간이 전자 우편 전송 프로토콜(Simple Mail Transfer Protocol, SMTP)
		· SMTP에서는 기본적으로 7비트 기준 아스키 코드만 전송가능
			- 영어가 아닌 외국어, 특수기호, 이미지, 파일 전송을 위해서는 
			인코딩이 필요 => MIME
	- HTTP에서도 차용
	- Content-Type (MIME-Type)
		· 어떤 형식의 자료를 송/수신 하는지 표시
			- MIME의 종류를 표시
		· html/text, application/json, image/png
		· multipart/form-data
		· ICANN(Internet Corporation for Assigned Names and Numbers)
		국제 인터넷 주소 관리 기구에서 관리
	
	Servlet 생성 / 등록
	- 클래스 생성(HttpServlet 상속)
	- URL Mapping
		· url – servlet
		· web.xml
		· @WebServlet






pom : Project Object Model - 프로젝트에 대한 설정 정보
	 해당 프로젝트를 만든 회사
	 프로젝트 이름
	 프로젝트의 버전
	 프로젝트에서 필요로 하는 의존성(dependency) - 라이브러리(ojdbc6.jar)
	 
	 open resource - ctrl + shift + r
	 
	 
