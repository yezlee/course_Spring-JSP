1. 세션체크 Filter
	- 로그인을 하지 않은 사용자는 시스템 내부 메뉴를 사용하지 못하도록 제어
	
	현상황 : localhost/allUser - url로 직접 접속하면 로그인하지 않아도 사용자 리스트를 볼 수 있음
	개선 : 서블릿으로 요청이 전달되기전에 filter에 세션이 있는지(S_USER)를 체크하여
		  세션정보가 있을 경우에만 서블릿으로 요청 전달
		  **** 모든 URL이 아닌 특정 URL에 대해서만 체크가 되도록 해야함
		  localhost/login.jsp - 이거랑, 왜냐 로그인하려고하는데 로그인세션어딨어? 하면 말이안되지
		  
		  
		  모든페이지에 다하면 루프에 빠진다
		  
		  지금은 ~만 빼고 얘한테만 필터처리 이런게 안돼(나중에 스프링에선됨)
		  그래서 지금은 request.getRequestURI() 를 사용
		  
		  
		  세션정보가 없을 경우 로그인 페이지로 이동
		  
		  
<필터를 이용하여 임의의 파라미터 추가하기> - setParameter하고싶은데 이런게 없으니까

- request 객체에 생성되어있는 parameterMap은 수정이 불가능한 Map
 즉, 임의로 파라미터를 추가하는 작업은 불가능하다.
 
 Filter를 이용하여 요청을 servlet으로 전달하기 전에 서버가 생성한 request 객체를 이용하여 새로운 request 객체를 생성 ==> requestWrapper
 
 원본 parameter를 복사하여 수정 가능한 Map에 복사
 request객체가 원본 파라미터 맵이 아닌, 우리가 만든 map객체를 사용할 수 있도록 parameter관련 메소드를 4개 재정의
 
 wrapper ==> HttpServletRequestWrapper 클래스 상속
 
 
 
 <http://propedit.sourceforge.jp/eclipse/updates 이거 다운받고 하는거>
 Resource Bundle : 국제화 서비스를 위한 번역 파일
 파일 이름 형식 : 리소스번들이름_언어코드_국가코드.properties
 				msg_ko.properties
 				msg_en.properties
 				msg_ja.properties
				지원하지 않는 언어, 국가코드에 대해서 기본적으로 적용되는 파일(모든 나라언어를 다 지원할수는 없으니까)
				msg.properties
				
파일 작성
프로퍼티도 맵이랑 비슷하지 그걸 생각하면서
코드 = 메시지

jsp에는 코드 부분을 기술하면 국제화 처리에 의해 사용자가 요청한 언어의 메시지로 치환된다.


--실습

selectLang.jsp 요청을 보내는 두가지 경로가 존재
1. 웹 브라우저 주소줄에 localhost/jstl/selectLang.jsp 를 입력(파라미터 없음)
2. selectLang.jsp 안에 있는 select box의 값이 변경되었을때 (파라미터 있음)

이 두가지를 생각하고 코드짜는걸 시작.

				
				
 <이벤트리스너>
 이벤트종류
 1. life cycle
 	1) request : ServletRequestListener
 	2) session : HttpSessionListener
 	3) application : ServletContextListener
	
	${pageContext.request.contextPath} ==> ${cp}
	서버가 기둥이 되었을때
	application scope에 cp라는 속성으로 contextPath 값을 저장
	
리스너 생성(알맞은 인터페이스를 구현한 클래스 생성)
리스너 등록(web.xml)	

cp를 만들었어. 
ApplicaionListener 에다가
그리고나서 
${pageContext.request.contextPath}를 ${cp} 로 바꿔	
	
	
	 
 2. Attribute
 우리가 세션을 준게 있지 S_USER라고 그게 생기면 로그인을 한거고 그게 사라지면 로그아웃된거.
 그걸 통해서 누가 몇몇이나 접속했는지 알아보는걸 만들자. LoginUserListener.java
		   
	사용자가 로그인을 할 경우 : S_USER 속성을 session에 추가
	Map객체 <String, UserVo>로 관리해볼까? 아님 
	Set<String>으로 관리? - 이걸로 로그인한 사용자 아이디를 관리
	
	모든 세션에 대해서
	바인딩은 세션영역에?
	
	
라이프사이클
어플리케이션	
	
	
			   